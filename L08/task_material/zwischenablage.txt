/Interval
clearInterval(myVar);

/BackgroundColorChange
var colors: string[] = ["rgb(1,88,224)", "#ff0088", "yellow", "rgba(0,0,100,0.5)", "red", "#00ffff"]

var key: number = 0;

function colorchange(){
document.querySelector("body").style.background = colors[key];
key++;
}

window.addEventListener('load', function(){
document.querySelector('#buttonA').addEventListener('click', colorchange);
});

Var nameFriends: string [] = ['Laila', 'Leticia', 'Ilayda'];

/Intervalle?
for (var i = 0 ; i < 10; i++) {
console.log(i);
setTimeout(function())
}
bei warten werden andere Funktionen blockiert
for (var i = 0 ; i < arrayLength; i++) {

}

/SoundEinfuehrung
var sound:HTMLAudioElement = new Audio('sample.mp3');
sound.play();

/Beat+func
function playBeat(): void{
        setInterval(function() {
            beat[0].play();
        }, 0 );

        setInterval(function() {
            beat[1].play();
        }, 500 );

        setInterval(function() {
            beat[2].play();
        }, 1000 );

        setInterval(function() {
            beat[3].play();
        }, 1500 );

        setInterval(function() {
            beat[4].play();
        }, 2000 );

//Aufgabenstellung L08
1)Ein Linter soll das Projekt bei der Entwicklung überprüfen. Setzen Sie dafür das Regelwerk des Linter (die Datei tslint.json, siehe Links zum Video) in Ihren Projektordner und installieren Sie sich per Terminal das Node-Modul TSLinter:

npm install typescript tslint -g
# Anmerkung: wenn Adminrechte benötigt werden (unter Mac und Linux): sudo npm install typescript tslint -g
Als letzten Schritt müssen Sie für den Linter in VSC die TSLint Extension installieren.

2)Der Beat soll als Loop, also wiederholend, abspielen.

3)Der Play-Button soll erweitert werden: bei Klick auf Play, soll sich der Button zu einem Stop-Button verwandeln. Bei Klick auf Stop soll wieder der Play-Button in Funktion und Darstellung abgebildet sein.

4)Folgende Anforderung für Ihre Code-Struktur: (a) das Abspielen eines Samples soll von einer zentralen Funktion ausgeführt werden. In Ihrem Code darf also nur einmal die Anweisung .play() auftrauchen. (b) Für das Abspielen, Aufnehmen und Löschen eines Beats soll nur ein Array manipuliert werden.

5)Eine visuelle Anforderung: für die Darstellung der Buttons (Play/Stop, Delete) sollen keine Grafiken eingesetzt werden, stattdessen werden Sie die Icons aus einer Icon-Font einbinden. Sehen Sie sich dazu das Beispiel example-icon-fonts.html an und übertragen Sie die entsprechenden Fragemente in Ihre Anwendung.

6)Ein "Remix"-Button soll folgende Funktion bieten: klick der Nutzer den Remix-Button, dann soll der bestehen Beat verworfen werden und stattdessen ein neuer, zufällig vom Computer generierter Beat entstehen.
Kleiner Tipp: eine Möglichkeit, um eine zufällige Zahlen zu generieren oder Zahlen runden haben Sie schon kennen gelernt:

Math.random() // erzeugt eine (quasi) Zufallszahl 
Math.round() // eine einfache Art um eine Gleitkommazahl zu einer Ganzzahl zu runden

7)Ein Delete-Button soll den aktuell definierten Beat löschen / leeren.

(Optionale Zusatzaufgabe (wenn Grundaufgabe erfüllt wurde, dann gibt es dafür ein Sternchen))

Ein Record-Button soll ermöglichen, das man einen Beat aufnimmt. Sobald der Record-Button geklickt wurde, soll folgende Aktion bei Klick eines Pads ausgeführt werden: der entsprechende Sound des Pads wird abgespielt (wie gehabt) plus das entsprechende Sample wird in den Beat-Loop aufgenommen. D.h. wenn später der Play-Button geklickt wird, dann soll der neu definierte Beat abspielen.